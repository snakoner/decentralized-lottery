{"ast":null,"code":"var _jsxFileName = \"/home/vb/playground/decentralized-lottery-main/decentralized-lottery-main/frontend/src/App.tsx\",\n  _s = $RefreshSig$();\n//App.tsx\nimport React from 'react';\nimport Header from './Header.tsx';\nimport './App.css';\nimport { ethers } from 'ethers';\nimport { useState, useEffect } from 'react';\nimport './index.css';\nimport LotteryStatus from './Lottery.tsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst supportedChains = [new ethers.Network('sepolia', 11155111)];\nconst ALCHEMY_RPC_URL = \"https://eth-sepolia.g.alchemy.com/v2/QtPw5bLONCtW00agVEhE66pb1Vsv9RnC\";\nfunction App() {\n  _s();\n  const [account, setAccount] = useState(null);\n  const [network, setNetwork] = useState(null);\n  const [walletError, setWalletError] = useState(null);\n  const [walletBalance, setWalletBalance] = useState(null);\n  const [connected, setConnected] = useState(false);\n  const walletBalanceFormat = balance => {\n    return ethers.formatUnits(balance).slice(0, 6) + \" ETH\";\n  };\n  const connectWallet = async () => {\n    if (typeof window.ethereum === undefined) {\n      setWalletError(\"MetaMask is not installed. Please install it to use this feature.\");\n      console.log(walletError);\n      return;\n    }\n    try {\n      const accounts = await window.ethereum.request({\n        method: \"eth_requestAccounts\"\n      });\n      if (accounts.length === 0) {\n        localStorage.setItem('walletConnected', 'false');\n        return;\n      }\n      setAccount(accounts[0]);\n      setConnected(true);\n      localStorage.setItem('walletConnected', 'true');\n      const remoteProvider = new ethers.JsonRpcProvider(ALCHEMY_RPC_URL);\n      const provider = new ethers.BrowserProvider(window.ethereum);\n      setWalletBalance(walletBalanceFormat(await remoteProvider.getBalance(accounts[0])));\n      setNetwork((await provider.getNetwork()).name);\n    } catch (err) {\n      setWalletError(\"Failed to connect wallet. Please try again.\");\n      console.log(walletError);\n    }\n  };\n  const disconnectWallet = () => {\n    localStorage.setItem('walletConnected', 'false');\n    setConnected(false);\n    setAccount(null);\n    setWalletBalance(null);\n    setNetwork(null);\n  };\n  const localStorageWalletConnectHandler = () => {\n    if (localStorage.getItem('walletConnected') === undefined) {\n      localStorage.setItem('walletConnected', 'false');\n    }\n    return localStorage.getItem('walletConnected') === 'true' ? true : false;\n  };\n  useEffect(() => {\n    const walletConnected = localStorageWalletConnectHandler();\n    if (walletConnected) {\n      connectWallet();\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      connected: connected,\n      account: account,\n      network: network,\n      error: walletError,\n      connectWallet: connectWallet,\n      disconnectWallet: disconnectWallet,\n      walletBalance: walletBalance\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(LotteryStatus, {\n      connected: connected,\n      account: account\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"q2x0gTeLNdn5zu+fHDXlcTbGCJM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Header","ethers","useState","useEffect","LotteryStatus","jsxDEV","_jsxDEV","supportedChains","Network","ALCHEMY_RPC_URL","App","_s","account","setAccount","network","setNetwork","walletError","setWalletError","walletBalance","setWalletBalance","connected","setConnected","walletBalanceFormat","balance","formatUnits","slice","connectWallet","window","ethereum","undefined","console","log","accounts","request","method","length","localStorage","setItem","remoteProvider","JsonRpcProvider","provider","BrowserProvider","getBalance","getNetwork","name","err","disconnectWallet","localStorageWalletConnectHandler","getItem","walletConnected","className","children","error","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/vb/playground/decentralized-lottery-main/decentralized-lottery-main/frontend/src/App.tsx"],"sourcesContent":["//App.tsx\nimport React from 'react';\nimport Header from './Header.tsx';\nimport './App.css';\nimport { ethers } from 'ethers';\nimport {useState, useEffect} from 'react';\nimport './index.css';\nimport LotteryStatus from './Lottery.tsx';\n\nconst supportedChains: ethers.Network[] = [\n    new ethers.Network('sepolia', 11155111),\n];\n\nconst ALCHEMY_RPC_URL = \"https://eth-sepolia.g.alchemy.com/v2/QtPw5bLONCtW00agVEhE66pb1Vsv9RnC\";\n\nfunction App() {\n    const [account, setAccount] = useState<string|null>(null);\n    const [network, setNetwork] = useState<ethers.Network|null>(null);\n    const [walletError, setWalletError] = useState<string|null>(null);\n    const [walletBalance, setWalletBalance] = useState<string|null>(null);\n    const [connected, setConnected] = useState<boolean>(false);\n\n    const walletBalanceFormat = (balance: bigint) => {\n        return ethers.formatUnits(balance).slice(0, 6) + \" ETH\";        \n    }\n\n    const connectWallet = async () => {\n        if (typeof window.ethereum === undefined) {\n            setWalletError(\"MetaMask is not installed. Please install it to use this feature.\");\n            console.log(walletError);\n            return;\n        }\n\n        try {\n            const accounts = await window.ethereum.request({\n                method: \"eth_requestAccounts\",\n            });\n\n            if (accounts.length === 0) {\n                localStorage.setItem('walletConnected', 'false');\n                return;\n            }\n\n            setAccount(accounts[0]);\n            setConnected(true);\n            localStorage.setItem('walletConnected', 'true');\n\n            const remoteProvider = new ethers.JsonRpcProvider(ALCHEMY_RPC_URL);\n            const provider = new ethers.BrowserProvider(window.ethereum);\n\n            setWalletBalance(walletBalanceFormat(await remoteProvider.getBalance(accounts[0])));\n            setNetwork((await provider.getNetwork()).name);\n        } catch (err) {\n            setWalletError(\"Failed to connect wallet. Please try again.\");\n            console.log(walletError);\n        }\n    }\n\n    const disconnectWallet = () => {\n        localStorage.setItem('walletConnected', 'false');\n        setConnected(false);\n        setAccount(null);\n        setWalletBalance(null);\n        setNetwork(null);\n    }\n\n    const localStorageWalletConnectHandler = () => {\n        if (localStorage.getItem('walletConnected') === undefined) {\n            localStorage.setItem('walletConnected', 'false');\n        }\n\n        return localStorage.getItem('walletConnected') === 'true' ? true : false;\n    }\n\n    useEffect(() => {\n        const walletConnected = localStorageWalletConnectHandler();\n        if (walletConnected) {\n            connectWallet();\n        }\n    }, []);\n\n    return (\n        <div className=\"App\">\n            <Header\n                connected={connected}\n                account={account} \n                network={network} \n                error={walletError} \n                connectWallet={connectWallet}\n                disconnectWallet={disconnectWallet}\n                walletBalance={walletBalance}\n            ></Header>\n            <LotteryStatus connected={connected} account={account}></LotteryStatus>\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}